services:
  webslayer:
    build: 
      context: ./backend
    environment:
      - DEFAULT_LLM_MODEL=${DEFAULT_LLM_MODEL:-llama3.1:8b-instruct-q5_0}
    ports:
      - "8000:8000"
      - "5678:5678"
    volumes:
      - webslayer_data:/webslayer
      - ./.env:/app/.env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started

  celery_worker:
    build: 
      context: ./backend
    command: >
      python -m debugpy --listen 0.0.0.0:5679
      -m celery -A core.celery_app worker --loglevel=info
    ports:
      - "5679:5679"
    volumes:
      - webslayer_data:/webslayer
      - ./.env:/app/.env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_DB: webslayer_db
      POSTGRES_USER: webslayer_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/postgres-init.sql:/docker-entrypoint-initdb.d/postgres-init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U webslayer_user -d webslayer_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"

volumes:
  webslayer_data:
  postgres_data: